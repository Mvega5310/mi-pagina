name: Lighthouse CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build:ssr
      
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results-${{ matrix.node-version }}
        path: |
          lighthouse-reports/
          .lighthouseci/
        retention-days: 30
        
  performance-budget:
    runs-on: ubuntu-latest
    needs: lighthouse
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Analyze bundle size
      run: |
        npm run build
        npm run analyze:bundle
        
    - name: Check import optimization
      run: npm run optimize:imports
      
    - name: Performance Budget Check
      run: |
        echo "üìä Performance Budget Verification"
        echo "=================================="
        
        # Check bundle sizes
        TOTAL_SIZE=$(find dist -name "*.js" -exec wc -c {} + | tail -1 | awk '{print $1}')
        MAX_BUNDLE_SIZE=600000  # 600KB
        
        if [ $TOTAL_SIZE -gt $MAX_BUNDLE_SIZE ]; then
          echo "‚ùå Bundle size ($TOTAL_SIZE bytes) exceeds budget ($MAX_BUNDLE_SIZE bytes)"
          exit 1
        else
          echo "‚úÖ Bundle size ($TOTAL_SIZE bytes) within budget ($MAX_BUNDLE_SIZE bytes)"
        fi
        
        # Check individual chunk sizes
        find dist -name "*.js" -exec sh -c '
          size=$(wc -c < "$1")
          filename=$(basename "$1")
          if [ $size -gt 200000 ]; then
            echo "‚ö†Ô∏è  Large chunk: $filename ($size bytes)"
          fi
        ' _ {} \;
        
        echo "‚úÖ Performance budget check completed"