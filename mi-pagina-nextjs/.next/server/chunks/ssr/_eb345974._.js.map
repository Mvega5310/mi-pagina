{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/client/components/noop-head.tsx","turbopack:///[project]/src/components/SEO.tsx","turbopack:///[project]/src/utils/projectsDataGenerator.ts","turbopack:///[project]/src/app/projects/page.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n","import Head from 'next/head'\nimport { useTranslation } from 'react-i18next'\n\ninterface SEOProps {\n  title?: string\n  description?: string\n  keywords?: string\n  type?: string\n  image?: string\n  url?: string\n  author?: string\n  siteName?: string\n  locale?: string\n  alternateLocales?: string[]\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  keywords,\n  type = 'website',\n  image = '/og-image.jpg',\n  url = '/',\n  author = 'Friendsoft',\n  siteName = 'Friendsoft',\n  locale = 'es_ES',\n  alternateLocales = ['en_US']\n}) => {\n  const { t, i18n } = useTranslation()\n\n  const currentLocale = i18n.language === 'en' ? 'en_US' : 'es_ES'\n  const finalTitle = title || t('seo.default.title', 'Friendsoft - Desarrollo de Software')\n  const finalDescription = description || t('seo.default.description', 'Desarrollo profesional de software y soluciones tecnol贸gicas')\n  const finalKeywords = keywords || t('seo.default.keywords', 'desarrollo de software, desarrollo web, aplicaciones m贸viles')\n\n  return (\n    <Head>\n      {/* Basic Meta Tags */}\n      <title>{finalTitle}</title>\n      <meta name=\"description\" content={finalDescription} />\n      <meta name=\"keywords\" content={finalKeywords} />\n      <meta name=\"author\" content={author} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"language\" content={currentLocale} />\n\n      {/* Open Graph Meta Tags */}\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:title\" content={finalTitle} />\n      <meta property=\"og:description\" content={finalDescription} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:site_name\" content={siteName} />\n      <meta property=\"og:locale\" content={currentLocale} />\n      {alternateLocales.map((altLocale) => (\n        <meta key={altLocale} property=\"og:locale:alternate\" content={altLocale} />\n      ))}\n\n      {/* Twitter Card Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={finalTitle} />\n      <meta name=\"twitter:description\" content={finalDescription} />\n      <meta name=\"twitter:image\" content={image} />\n\n      {/* Additional Meta Tags */}\n      <meta name=\"theme-color\" content=\"#7B43D6\" />\n      <meta name=\"msapplication-TileColor\" content=\"#7B43D6\" />\n\n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={url} />\n\n      {/* Favicon */}\n      <link rel=\"icon\" href=\"/public/images/logo.svg\" />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n\n      {/* Preconnect to external domains for performance */}\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n    </Head>\n  )\n}\n\nexport default SEO","import { TFunction } from \"i18next\";\n\n// Project IDs that exist in the translation files\nconst PROJECT_IDS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n\n// Image mapping for projects\nconst PROJECT_IMAGES = {\n  '1': '/images/projects/section1-imagen1.webp',\n  '2': '/images/projects/section1-imagen3.webp',\n  '3': '/images/projects/section1-imagen5.webp',\n  '4': '/images/projects/section1-imagen1.webp',\n  '5': '/images/projects/section1-imagen3.webp',\n  '6': '/images/projects/section1-imagen5.webp',\n  '7': '/images/projects/section1-imagen1.webp',\n  '8': '/images/projects/section1-imagen3.webp',\n  '9': '/images/projects/section1-imagen5.webp',\n  '10': '/images/projects/section1-imagen1.webp',\n  '11': '/images/projects/section1-imagen3.webp',\n  '12': '/images/projects/section1-imagen5.webp'\n};\n\n// Children images mapping\nconst CHILDREN_IMAGES = {\n  '1': '/images/projects/section1-imagen2.webp',\n  '2': '/images/projects/section1-imagen4.webp',\n  '3': '/images/projects/section1-imagen6.webp',\n  '4': '/images/projects/section1-imagen2.webp',\n  '5': '/images/projects/section1-imagen4.webp',\n  '6': '/images/projects/section1-imagen6.webp',\n  '7': '/images/projects/section1-imagen2.webp',\n  '8': '/images/projects/section1-imagen4.webp',\n  '9': '/images/projects/section1-imagen6.webp',\n  '10': '/images/projects/section1-imagen2.webp',\n  '11': '/images/projects/section1-imagen4.webp',\n  '12': '/images/projects/section1-imagen6.webp'\n};\n\n// Similar projects mapping\nconst SIMILAR_PROJECTS = {\n  '1': ['12'],\n  '2': ['1', '4', '6'],\n  '3': ['1', '2', '7'],\n  '4': ['8', '9'],\n  '5': ['1', '3'],\n  '6': ['2', '9'],\n  '7': ['3', '6'],\n  '8': ['4', '9'],\n  '9': ['6', '8'],\n  '10': ['11', '12'],\n  '11': ['10', '12'],\n  '12': ['7', '11']\n};\n\nexport interface ProjectData {\n  id: string;\n  title: string;\n  category: string;\n  color?: string;\n  client: string;\n  services: string[];\n  shortDescription: string;\n  longDescription: string;\n  results: string;\n  image: string;\n  fallback: string;\n  similar: string[];\n  children: {\n    category: string;\n    title: string;\n    image: string;\n  };\n}\n\n/**\n * Generates project data from translation files\n * @param t - Translation function from react-i18next\n * @returns Array of project data\n */\nexport const generateProjectsData = (t: TFunction): ProjectData[] => {\n  \n  return PROJECT_IDS.map(id => {\n    \n    // Get services array directly from translation (it's already an array in the JSON)\n    const services = t(`projects.projectDetails.${id}.services`, '') as string;\n    \n    const projectData = {\n      id,\n      title: t(`projects.projectDetails.${id}.title`, `Project ${id}`),\n      category: t(`projects.projectDetails.${id}.category`, 'General'),\n      color: t(`projects.projectDetails.${id}.color`, 'bg-blue-100 text-blue-600'),\n      client: t(`projects.projectDetails.${id}.client`, 'Client'),\n      services: Array.isArray(services) ? services : [],\n      shortDescription: t(`projects.projectDetails.${id}.shortDescription`, 'Short description'),\n      longDescription: t(`projects.projectDetails.${id}.longDescription`, 'Long description'),\n      results: t(`projects.projectDetails.${id}.results`, 'Results'),\n      image: PROJECT_IMAGES[id as keyof typeof PROJECT_IMAGES] || '/default-image.jpg',\n      fallback: PROJECT_IMAGES[id as keyof typeof PROJECT_IMAGES] || '/default-image.jpg',\n      similar: SIMILAR_PROJECTS[id as keyof typeof SIMILAR_PROJECTS] || [],\n      children: {\n        category: t(`projects.projectDetails.${id}.category`, 'General'),\n        title: t(`projects.projectDetails.${id}.title`, `Project ${id}`),\n        image: CHILDREN_IMAGES[id as keyof typeof CHILDREN_IMAGES] || '/default-image.jpg'\n      }\n    };\n    \n    return projectData;\n  });\n};\n\n/**\n * Gets a single project by ID from translation files\n * @param id - Project ID\n * @param t - Translation function from react-i18next\n * @returns Single project data or null if not found\n */\nexport const getProjectById = (id: string, t: TFunction): ProjectData | null => {\n  \n  if (!PROJECT_IDS.includes(id)) {\n    return null;\n  }\n\n  const projects = generateProjectsData(t);\n  const project = projects.find(project => project.id === id) || null;\n  \n  return project;\n};\n\n/**\n * Gets similar projects for a given project ID\n * @param id - Project ID\n * @param t - Translation function from react-i18next\n * @returns Array of similar projects\n */\nexport const getSimilarProjects = (id: string, t: TFunction): ProjectData[] => {\n  \n  const similarIds = SIMILAR_PROJECTS[id as keyof typeof SIMILAR_PROJECTS] || [];\n  \n  const allProjects = generateProjectsData(t);\n  const similarProjects = allProjects.filter(project => similarIds.includes(project.id));\n  \n  return similarProjects;\n};\n\n// Static versions for build-time generation (without i18next dependency)\ntype SimpleTFunction = (key: string, fallback?: string) => string;\n\nconst generateProjectsDataStatic = (t: SimpleTFunction): ProjectData[] => {\n  return PROJECT_IDS.map(id => {\n    const services = t(`home.projectDetails.${id}.services`);\n    const projectData = {\n      id,\n      title: t(`projects.projectDetails.${id}.title`, `Proyecto ${id}`),\n      category: t(`projects.projectDetails.${id}.category`, 'General'),\n      color: t(`projects.projectDetails.${id}.color`, 'bg-blue-100 text-blue-600'),\n      client: t(`projects.projectDetails.${id}.client`, 'Cliente'),\n      services: Array.isArray(services) ? services : [], // Static fallback\n      shortDescription: t(`projects.projectDetails.${id}.shortDescription`, 'Descripci贸n corta del proyecto'),\n      longDescription: t(`projects.projectDetails.${id}.longDescription`, 'Descripci贸n detallada del proyecto'),\n      results: t(`projects.projectDetails.${id}.results`, 'Resultados del proyecto'),\n      image: PROJECT_IMAGES[id as keyof typeof PROJECT_IMAGES] || '/default-image.jpg',\n      fallback: PROJECT_IMAGES[id as keyof typeof PROJECT_IMAGES] || '/default-image.jpg',\n      similar: SIMILAR_PROJECTS[id as keyof typeof SIMILAR_PROJECTS] || [],\n      children: {\n        category: t(`projects.projectDetails.${id}.category`, 'General'),\n        title: t(`projects.projectDetails.${id}.children.title`, `Proyecto Relacionado ${id}`),\n        image: CHILDREN_IMAGES[id as keyof typeof CHILDREN_IMAGES] || '/default-image.jpg'\n      }\n    };\n    \n    return projectData;\n  });\n};\n\nexport const getProjectByIdStatic = (id: string, t: SimpleTFunction): ProjectData | null => {\n  if (!PROJECT_IDS.includes(id)) {\n    return null;\n  }\n\n  const projects = generateProjectsDataStatic(t);\n  const project = projects.find(project => project.id === id) || null;\n  \n  return project;\n};\n\nexport const getSimilarProjectsStatic = (id: string, t: SimpleTFunction): ProjectData[] => {\n  const similarIds = SIMILAR_PROJECTS[id as keyof typeof SIMILAR_PROJECTS] || [];\n  \n  const allProjects = generateProjectsDataStatic(t);\n  const similarProjects = allProjects.filter(project => similarIds.includes(project.id));\n  \n  return similarProjects;\n};\n\n// Export PROJECT_IDS for use in generateStaticParams\nexport { PROJECT_IDS };","'use client'\n\nimport React, { useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport SEO from '@/components/SEO'\nimport Link from 'next/link'\nimport { generateProjectsData, ProjectData } from '@/utils/projectsDataGenerator'\n\n// Projects Carousel Component\nconst ProjectsCarousel = ({ projects }: { projects: ProjectData[] }) => {\n  const { t } = useTranslation()\n  \n  // Don't render if no projects\n  if (projects.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-gray-500 text-lg\">{t('projects.noProjects', 'No hay proyectos disponibles')}</p>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"relative\">\n      {/* Projects Grid - Vertical Layout (all projects displayed) */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\" role=\"grid\" aria-label={t('projects.gridLabel', 'Portfolio de proyectos')}>\n        {projects.map((project, index) => (\n          <article\n            key={project.id}\n            className=\"group relative bg-white shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 rounded-lg\"\n            role=\"gridcell\"\n            aria-labelledby={`project-title-${project.id}`}\n          >\n            {/* Project Image - Responsive with explicit dimensions */}\n            <div className=\"relative overflow-hidden\" style={{ height: '240px' }}>\n              <picture>\n                <source srcSet={project.image} type=\"image/webp\" />\n                <img\n                  src={project.fallback}\n                  alt={`${project.title} - ${project.category}`}\n                  className=\"w-full h-full object-cover\"\n                  width=\"400\"\n                  height=\"240\"\n                  loading={index < 3 ? 'eager' : 'lazy'}\n                  decoding={index < 3 ? 'sync' : 'async'}\n                />\n              </picture>\n              \n              {/* Overlay with improved contrast - Responsive */}\n              <div className=\"absolute inset-0 bg-gray-900 opacity-0 group-hover:opacity-85 flex items-center justify-center\">\n                <div className=\"text-center text-white p-4 sm:p-6\">\n                  <h3 className=\"text-lg sm:text-xl font-bold mb-2\">{project.title}</h3>\n                  <p className=\"text-xs sm:text-sm mb-3 sm:mb-4 opacity-90 line-clamp-3\">{project.shortDescription}</p>\n                  <Link \n                    href={`/projects/${project.id}`}\n                    className=\"bg-white text-gray-900 px-4 sm:px-6 py-2 text-sm sm:text-base font-semibold hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-900 rounded inline-block\"\n                    aria-label={`${t('projects.viewProject')}: ${project.title}`}\n                  >\n                    {t('projects.viewProject', 'Discover more')}\n                  </Link>\n                </div>\n              </div>\n              \n              {/* Category Badge - Responsive with better contrast */}\n              <div className=\"absolute top-3 sm:top-4 left-3 sm:left-4\">\n                <span className=\"bg-blue-700 text-white px-2 sm:px-3 py-1 text-xs font-semibold rounded shadow-sm\" role=\"badge\" aria-label={`Categor铆a: ${project.category}`}>\n                  {project.category}\n                </span>\n              </div>\n            </div>\n            \n            {/* Project Info - Responsive */}\n            <div className=\"p-4 sm:p-6\">\n              <div className=\"mb-2\">\n                <span className=\"text-blue-700 text-xs sm:text-sm font-semibold\">{project.category}</span>\n              </div>\n              <h2 id={`project-title-${project.id}`} className=\"text-lg sm:text-xl font-bold text-gray-900 mb-2 line-clamp-2\">{project.title}</h2>\n              <p className=\"text-gray-700 text-sm leading-relaxed line-clamp-3\">{project.shortDescription}</p>\n              \n              <div className=\"mt-3 sm:mt-4\">\n                <Link \n                  href={`/projects/${project.id}`}\n                  className=\"text-blue-700 text-sm sm:text-base font-semibold hover:text-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded px-1 py-1\"\n                  aria-label={`${t('projects.viewProject')}: ${project.title}`}\n                >\n                  {t('projects.viewProject', 'Discover more')}\n                </Link>\n              </div>\n            </div>\n          </article>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst ProjectsPage = () => {\n  const { t } = useTranslation()\n  \n  // Generate projects data from translations\n  const projectsData = generateProjectsData(t)\n\n  // Preload critical images for LCP optimization\n  useEffect(() => {\n    const preloadImages = [\n      \"/images/projects/section1-imagen1.webp\",\n      \"/images/projects/section1-imagen2.webp\",\n      \"/images/projects/section1-imagen3.webp\"\n    ]\n    \n    preloadImages.forEach(src => {\n      const link = document.createElement('link')\n      link.rel = 'preload'\n      link.as = 'image'\n      link.href = src\n      link.type = 'image/webp'\n      document.head.appendChild(link)\n    })\n  }, [])\n\n  // Map images to projects data\n  const imageMap = {\n    '1': { webp: \"/images/projects/section1-imagen1.webp\", jpg: \"/images/projects/section1-imagen1.jpg\" },\n    '2': { webp: \"/images/projects/section1-imagen2.webp\", jpg: \"/images/projects/section1-imagen2.jpg\" },\n    '3': { webp: \"/images/projects/section1-imagen3.webp\", jpg: \"/images/projects/section1-imagen3.jpg\" },\n    '4': { webp: \"/images/projects/section1-imagen4.webp\", jpg: \"/images/projects/section1-imagen4.jpg\" },\n    '5': { webp: \"/images/projects/section1-imagen5.webp\", jpg: \"/images/projects/section1-imagen5.jpg\" },\n    '6': { webp: \"/images/projects/section1-imagen6.webp\", jpg: \"/images/projects/section1-imagen6.jpg\" }\n  }\n\n  // Combine projects data with images\n  const projects = projectsData.map(project => ({\n    ...project,\n    image: imageMap[project.id as keyof typeof imageMap]?.webp || project.image,\n    fallback: imageMap[project.id as keyof typeof imageMap]?.jpg || project.image\n  }))\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <SEO\n        title={t('seo.projects.title', 'Portfolio de Proyectos | Friendsoft')}\n        description={t('seo.projects.description', 'Explora nuestro portfolio de proyectos exitosos en desarrollo de software, aplicaciones web y m贸viles. Casos de 茅xito y soluciones innovadoras.')}\n        keywords={t('seo.projects.keywords', 'portfolio proyectos, casos 茅xito, desarrollo software, aplicaciones web, aplicaciones m贸viles, soluciones tecnol贸gicas')}\n        type=\"website\"\n        image={'/images/projects/section1-imagen1.webp'}\n        url=\"/projects\"\n      />\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12 lg:py-16\">\n        \n        {/* Projects Carousel - Responsive */}\n        <main>\n          <ProjectsCarousel projects={projects} />\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectsPage"],"names":["NoopHead"],"mappings":"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","ignoreList":[0]}