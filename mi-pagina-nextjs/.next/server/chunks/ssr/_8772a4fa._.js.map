{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/client/components/noop-head.tsx","turbopack:///[project]/src/components/SEO.tsx","turbopack:///[project]/src/app/contact/page.tsx","turbopack:///[project]/src/services/contactService.ts"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n","import Head from 'next/head'\nimport { useTranslation } from 'react-i18next'\n\ninterface SEOProps {\n  title?: string\n  description?: string\n  keywords?: string\n  type?: string\n  image?: string\n  url?: string\n  author?: string\n  siteName?: string\n  locale?: string\n  alternateLocales?: string[]\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  keywords,\n  type = 'website',\n  image = '/og-image.jpg',\n  url = '/',\n  author = 'Friendsoft',\n  siteName = 'Friendsoft',\n  locale = 'es_ES',\n  alternateLocales = ['en_US']\n}) => {\n  const { t, i18n } = useTranslation()\n\n  const currentLocale = i18n.language === 'en' ? 'en_US' : 'es_ES'\n  const finalTitle = title || t('seo.default.title', 'Friendsoft - Desarrollo de Software')\n  const finalDescription = description || t('seo.default.description', 'Desarrollo profesional de software y soluciones tecnológicas')\n  const finalKeywords = keywords || t('seo.default.keywords', 'desarrollo de software, desarrollo web, aplicaciones móviles')\n\n  return (\n    <Head>\n      {/* Basic Meta Tags */}\n      <title>{finalTitle}</title>\n      <meta name=\"description\" content={finalDescription} />\n      <meta name=\"keywords\" content={finalKeywords} />\n      <meta name=\"author\" content={author} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"language\" content={currentLocale} />\n\n      {/* Open Graph Meta Tags */}\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:title\" content={finalTitle} />\n      <meta property=\"og:description\" content={finalDescription} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:site_name\" content={siteName} />\n      <meta property=\"og:locale\" content={currentLocale} />\n      {alternateLocales.map((altLocale) => (\n        <meta key={altLocale} property=\"og:locale:alternate\" content={altLocale} />\n      ))}\n\n      {/* Twitter Card Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={finalTitle} />\n      <meta name=\"twitter:description\" content={finalDescription} />\n      <meta name=\"twitter:image\" content={image} />\n\n      {/* Additional Meta Tags */}\n      <meta name=\"theme-color\" content=\"#7B43D6\" />\n      <meta name=\"msapplication-TileColor\" content=\"#7B43D6\" />\n\n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={url} />\n\n      {/* Favicon */}\n      <link rel=\"icon\" href=\"/public/images/logo.svg\" />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n\n      {/* Preconnect to external domains for performance */}\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n    </Head>\n  )\n}\n\nexport default SEO","'use client'\n\nimport React, { useState, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport SEO from '@/components/SEO'\nimport { contactService, ContactFormData } from '@/services/contactService'\n\n\ninterface FormErrors {\n  name?: string;\n  email?: string;\n  phone?: string;\n  subject?: string;\n}\n\nconst ContactPage = () => {\n  const { t } = useTranslation()\n\n  const [formData, setFormData] = useState<ContactFormData>({\n    name: '',\n    email: '',\n    phone: '',\n    subject: '',\n    message: ''\n  })\n\n  const [errors, setErrors] = useState<FormErrors>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [submitMessage, setSubmitMessage] = useState('')\n  const [submitSuccess, setSubmitSuccess] = useState(false)\n\n  const validateEmail = useCallback((email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    return emailRegex.test(email)\n  }, [])\n\n  const validateForm = useCallback((): boolean => {\n    const newErrors: FormErrors = {}\n\n    if (!formData.name.trim()) {\n      newErrors.name = t('contact.form.required')\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = t('contact.form.required')\n    } else if (!validateEmail(formData.email)) {\n      newErrors.email = t('contact.form.invalidEmail')\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = t('contact.form.required')\n    }\n\n    if (!formData.subject.trim()) {\n      newErrors.subject = t('contact.form.required')\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }, [formData, t, validateEmail])\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }))\n\n    // Clear error when user starts typing\n    if (errors[name as keyof FormErrors]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: undefined\n      }))\n    }\n  }, [errors])\n\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault()\n\n    if (!validateForm()) {\n      return\n    }\n\n    setIsSubmitting(true)\n    setSubmitMessage('')\n\n    try {\n      // Use mock service for development - replace with real service in production\n      const response = await contactService.submitContactFormMock(formData)\n\n      if (response.success) {\n        setSubmitSuccess(true)\n        setSubmitMessage(t('contact.form.success'))\n        setFormData({\n          name: '',\n          email: '',\n          phone: '',\n          subject: '',\n          message: ''\n        })\n      } else {\n        setSubmitSuccess(false)\n        setSubmitMessage(t('contact.form.error'))\n      }\n    } catch {\n      setSubmitSuccess(false)\n      setSubmitMessage(t('contact.form.error'))\n    } finally {\n      setIsSubmitting(false)\n    }\n  }, [formData, validateForm, t])\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <SEO\n        title={t('seo.contact.title', 'Contacto | Friendsoft')}\n        description={t('seo.contact.description', 'Contáctanos para discutir tu proyecto de desarrollo de software. Estamos ubicados en Bogotá, Colombia y listos para ayudarte con soluciones tecnológicas.')}\n        keywords={t('seo.contact.keywords', 'contacto, Friendsoft, desarrollo software, Bogotá Colombia, consultoría tecnológica, presupuesto proyecto')}\n        type=\"website\"\n        url=\"/contact\"\n      />\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Contact Form Section - Responsive */}\n        <section className=\"py-12 sm:py-16 lg:py-24\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid lg:grid-cols-2 gap-8 sm:gap-12 lg:gap-16 max-w-7xl mx-auto\">\n\n              {/* Left Column - Contact Form - Responsive */}\n              <div className=\"bg-white rounded-xl sm:rounded-2xl p-6 sm:p-8 lg:p-12 shadow-lg\">\n                <div className=\"text-center mb-6 sm:mb-8\">\n                  <p className=\"text-[#7B43D6] font-medium mb-2 text-sm sm:text-base\">{t('contact.form.sendEmail')}</p>\n                  <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-4\">\n                    {t('contact.form.feelFreeToWrite')}\n                  </h1>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\n                  {/* Name and Email Row - Responsive */}\n                  <div className=\"grid sm:grid-cols-2 gap-4\">\n                    <div>\n                      <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        {t('contact.form.fields.name')}\n                      </label>\n                      <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        placeholder={t('contact.form.placeholders.name')}\n                        className={`w-full px-3 sm:px-4 py-2.5 sm:py-3 border rounded-lg focus:ring-2 focus:ring-[#7B43D6] focus:border-transparent transition-colors text-sm sm:text-base ${errors.name ? 'border-red-500' : 'border-gray-300'\n                          }`}\n                        aria-invalid={errors.name ? 'true' : 'false'}\n                        aria-describedby={errors.name ? 'name-error' : undefined}\n                        aria-required=\"true\"\n                        autoComplete=\"name\"\n                        required\n                      />\n                      {errors.name && (\n                        <p id=\"name-error\" className=\"text-red-500 text-xs sm:text-sm mt-1\" role=\"alert\">{errors.name}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        {t('contact.form.fields.email')}\n                      </label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleInputChange}\n                        placeholder={t('contact.form.placeholders.email')}\n                        className={`w-full px-3 sm:px-4 py-2.5 sm:py-3 border rounded-lg focus:ring-2 focus:ring-[#7B43D6] focus:border-transparent transition-colors text-sm sm:text-base ${errors.email ? 'border-red-500' : 'border-gray-300'\n                          }`}\n                        aria-invalid={errors.email ? 'true' : 'false'}\n                        aria-describedby={errors.email ? 'email-error' : undefined}\n                        aria-required=\"true\"\n                        autoComplete=\"email\"\n                        required\n                      />\n                      {errors.email && (\n                        <p id=\"email-error\" className=\"text-red-500 text-xs sm:text-sm mt-1\" role=\"alert\">{errors.email}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Phone and Subject Row - Responsive */}\n                  <div className=\"grid sm:grid-cols-2 gap-4\">\n                    <div>\n                      <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        {t('contact.form.fields.phone')}\n                      </label>\n                      <input\n                        type=\"tel\"\n                        id=\"phone\"\n                        name=\"phone\"\n                        value={formData.phone}\n                        onChange={handleInputChange}\n                        placeholder={t('contact.form.placeholders.phone')}\n                        className={`w-full px-3 sm:px-4 py-2.5 sm:py-3 border rounded-lg focus:ring-2 focus:ring-[#7B43D6] focus:border-transparent transition-colors text-sm sm:text-base ${errors.phone ? 'border-red-500' : 'border-gray-300'\n                          }`}\n                        aria-invalid={errors.phone ? 'true' : 'false'}\n                        aria-describedby={errors.phone ? 'phone-error' : undefined}\n                        aria-required=\"true\"\n                        autoComplete=\"tel\"\n                      />\n                      {errors.phone && (\n                        <p id=\"phone-error\" className=\"text-red-500 text-xs sm:text-sm mt-1\" role=\"alert\">{errors.phone}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        {t('contact.form.fields.subject')}\n                      </label>\n                      <input\n                        type=\"text\"\n                        id=\"subject\"\n                        name=\"subject\"\n                        value={formData.subject}\n                        onChange={handleInputChange}\n                        placeholder={t('contact.form.placeholders.subject')}\n                        className={`w-full px-3 sm:px-4 py-2.5 sm:py-3 border rounded-lg focus:ring-2 focus:ring-[#7B43D6] focus:border-transparent transition-colors text-sm sm:text-base ${errors.subject ? 'border-red-500' : 'border-gray-300'\n                          }`}\n                        aria-invalid={errors.subject ? 'true' : 'false'}\n                        aria-describedby={errors.subject ? 'subject-error' : undefined}\n                        aria-required=\"true\"\n                        autoComplete=\"off\"\n                        required\n                      />\n                      {errors.subject && (\n                        <p id=\"subject-error\" className=\"text-red-500 text-xs sm:text-sm mt-1\" role=\"alert\">{errors.subject}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Message Field - Responsive */}\n                  <div>\n                    <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      {t('contact.form.fields.message')}\n                    </label>\n                    <textarea\n                      id=\"message\"\n                      name=\"message\"\n                      rows={5}\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      placeholder={t('contact.form.placeholders.message')}\n                      className=\"w-full px-3 sm:px-4 py-2.5 sm:py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#7B43D6] focus:border-transparent transition-colors resize-none text-sm sm:text-base\"\n                      aria-required=\"false\"\n                      autoComplete=\"off\"\n                      required\n                    />\n                  </div>\n\n                  {/* Submit Button - Responsive */}\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-[#1F0951] text-white py-3 sm:py-4 px-4 sm:px-6 rounded-lg font-semibold hover:bg-[#2D1065] transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-[#7B43D6]/50\"\n                  >\n                    {isSubmitting ? 'Enviando...' : t('contact.form.button')}\n                  </button>\n\n                  {/* Submit Message */}\n                  {submitMessage && (\n                    <div\n                      className={`p-4 rounded-lg text-center ${submitSuccess ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'\n                        }`}\n                      role=\"alert\"\n                      aria-live=\"polite\"\n                    >\n                      {submitMessage}\n                    </div>\n                  )}\n                </form>\n              </div>\n\n              {/* Right Column - Contact Information */}\n              <div className=\"lg:pl-8\">\n                <div className=\"mb-12\">\n                  <p className=\"text-[#7B43D6] font-medium mb-2\">{t('contact.form.getInTouch')}</p>\n                  <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 mb-6\">\n                    {t('contact.form.getInTouch')}\n                  </h2>\n                  <p className=\"text-gray-600 text-lg leading-relaxed\">\n                    {t('contact.form.description')}\n                  </p>\n                </div>\n\n                {/* Contact Information Cards - Responsive */}\n                <div className=\"space-y-4 sm:space-y-6\" role=\"list\" aria-label={t('contact.info.contactMethods', 'Contact methods')}>\n                  {/* Phone */}\n                  <div className=\"flex items-start space-x-3 sm:space-x-4 p-4 sm:p-6 bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow\" role=\"listitem\">\n                    <div className=\"flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 bg-[#7B43D6]/10 rounded-lg flex items-center justify-center\" aria-hidden=\"true\">\n                      <img src={'/images/contacts/section1-phone.svg'} alt=\"\" className=\"w-5 h-5 sm:w-6 sm:h-6\" width=\"24\" height=\"24\" loading=\"eager\" />\n                    </div>\n                    <div className=\"min-w-0 flex-1\">\n                      <h3 className=\"font-semibold text-gray-900 mb-1 text-sm sm:text-base\">\n                        {t('contact.info.phone.label')}\n                      </h3>\n                      <a href={`tel:${t('contact.info.phone.number')}`} className=\"text-gray-600 font-medium text-sm sm:text-base truncate hover:text-[#7B43D6] transition-colors focus:outline-none focus:ring-2 focus:ring-[#7B43D6]/50 rounded\" aria-label={`${t('contact.info.phone.label')}: ${t('contact.info.phone.number')}`}>\n                        {t('contact.info.phone.number')}\n                      </a>\n                    </div>\n                  </div>\n\n                  {/* Email */}\n                  <div className=\"flex items-start space-x-3 sm:space-x-4 p-4 sm:p-6 bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow\" role=\"listitem\">\n                    <div className=\"flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 bg-[#7B43D6]/10 rounded-lg flex items-center justify-center\" aria-hidden=\"true\">\n                      <img src={'/images/contacts/section1-email.svg'} alt=\"\" className=\"w-5 h-5 sm:w-6 sm:h-6\" width=\"24\" height=\"24\" loading=\"eager\" />\n                    </div>\n                    <div className=\"min-w-0 flex-1\">\n                      <h3 className=\"font-semibold text-gray-900 mb-1 text-sm sm:text-base\">\n                        {t('contact.info.email.label')}\n                      </h3>\n                      <a href={`mailto:${t('contact.info.email.address')}`} className=\"text-gray-600 font-medium text-sm sm:text-base truncate hover:text-[#7B43D6] transition-colors focus:outline-none focus:ring-2 focus:ring-[#7B43D6]/50 rounded\" aria-label={`${t('contact.info.email.label')}: ${t('contact.info.email.address')}`}>\n                        {t('contact.info.email.address')}\n                      </a>\n                    </div>\n                  </div>\n\n                  {/* Address */}\n                  <div className=\"flex items-start space-x-3 sm:space-x-4 p-4 sm:p-6 bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow\" role=\"listitem\">\n                    <div className=\"flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 bg-[#7B43D6]/10 rounded-lg flex items-center justify-center\" aria-hidden=\"true\">\n                      <img src={'/images/contacts/section1-mark.svg'} alt=\"\" className=\"w-5 h-5 sm:w-6 sm:h-6\" width=\"24\" height=\"24\" loading=\"eager\" />\n                    </div>\n                    <div className=\"min-w-0 flex-1\">\n                      <h3 className=\"font-semibold text-gray-900 mb-1 text-sm sm:text-base\">\n                        {t('contact.info.address.label')}\n                      </h3>\n                      <p className=\"text-gray-600 font-medium text-sm sm:text-base\">\n                        {t('contact.info.address.location')}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Map Section - Responsive */}\n        <section className=\"w-full\">\n          <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\n            <iframe\n              title={t('contact.map.title', 'Location Map')}\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3976.8066925068!2d-74.0817!3d4.6097!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8e3f9bfd2da6cb29%3A0x239d635520a33914!2sBogot%C3%A1%2C%20Colombia!5e0!3m2!1sen!2sus!4v1234567890123!5m2!1sen!2sus\"\n              width=\"100%\"\n              height=\"320\"\n              style={{ border: 0, aspectRatio: '16/9' }}\n              allowFullScreen\n              loading=\"lazy\"\n              referrerPolicy=\"no-referrer-when-downgrade\"\n              className=\"sm:h-[350px] md:h-[400px]\"\n              aria-label={t('contact.map.description', 'Interactive map showing our location in Bogotá, Colombia')}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactPage","export interface ContactFormData {\n  name: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n}\n\nexport interface ContactResponse {\n  success: boolean;\n  message: string;\n}\n\nclass ContactService {\n  private baseUrl = 'https://api.friendsoft.co'; // Replace with your actual API endpoint\n\n  async submitContactForm(data: ContactFormData): Promise<ContactResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/contact`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      return {\n        success: true,\n        message: result.message || 'Message sent successfully!',\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Failed to send message. Please try again later.',\n      };\n    }\n  }\n\n  // For development/testing purposes - simulates API call\n  async submitContactFormMock(data: ContactFormData): Promise<ContactResponse> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        console.log('Contact form data:', JSON.stringify(data, null, 2));\n        resolve({\n          success: true,\n          message: 'Message sent successfully! We will get back to you soon.',\n        });\n      }, 1000);\n    });\n  }\n}\n\nexport const contactService = new ContactService();"],"names":["NoopHead"],"mappings":"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","ignoreList":[0]}